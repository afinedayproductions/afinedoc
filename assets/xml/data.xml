<?xml version= "1.0" encoding="UTF-8"?>

<items>

	<item search="$http">
		<description>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repellat, quibusdam reiciendis eum placeat mollitia quae sapiente nostrum omnis non illo nesciunt odio ut ipsam distinctio dolores ipsum dolore.</description>
		<name>$http</name>
		<note></note>
		<resume>Facilitates communication with the remote HTTP servers via the XMLHttpRequest object or via JSONP</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="$q">
		<description></description>
		<name>$q</name>
		<note></note>
		<resume>A promise / deferred implementation</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="$rootScope">
		<description></description>
		<name>$rootScope</name>
		<note></note>
		<resume>Global scope of the application</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="$scope">
		<description></description>
		<name>$scope</name>
		<note></note>
		<resume>Current scope of the controller</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="addslashes">
		<description></description>
		<name>addslashes()</name>
		<note></note>
		<resume>Add a backslash before quotes, double-quotes and backslashes in string variables</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":after ::after">
		<description></description>
		<name>:after</name>
		<note><strong>Alias:</strong> &lt;code&gt;::after&lt;/code&gt;</note>
		<resume>Create a pseudo-element whom is the last child of the matched element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-element</type>
	</item>

	<item search="angular.foreach angular foreach">
		<description></description>
		<name>angular.forEach()</name>
		<note></note>
		<resume>Executes a provided function once per array or object element</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="angular.module angular module">
		<description></description>
		<name>angular.module()</name>
		<note></note>
		<resume>Create, register and retrieve Angular modules</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="array">
		<description></description>
		<name>array()</name>
		<note><strong>Alias:</strong> &lt;code&gt;new Array()&lt;/code&gt; — &lt;code&gt;[]&lt;/code&gt;</note>
		<resume>Create a new array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array_diff array diff">
		<description></description>
		<name>array_diff()</name>
		<note></note>
		<resume>Computes the difference between arrays</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.foreach array foreach">
		<description></description>
		<name>Array.forEach()</name>
		<note></note>
		<resume>Executes a provided function once per array element</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array.length array length">
		<description></description>
		<name>Array.length</name>
		<note></note>
		<resume>Return the number of elements of the array</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Property</type>
	</item>

	<item search="array_pop array pop">
		<description></description>
		<name>array_pop()</name>
		<note></note>
		<resume>Remove the last element of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.pop array pop">
		<description></description>
		<name>Array.pop()</name>
		<note></note>
		<resume>Remove the last element of the array</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_push array push">
		<description></description>
		<name>array_push()</name>
		<note></note>
		<resume>Add one or more elements in the end of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.push array push">
		<description></description>
		<name>Array.push()</name>
		<note></note>
		<resume>Add one or more elements in the end of the array</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_shift array shift">
		<description></description>
		<name>array_shift()</name>
		<note></note>
		<resume>Remove the first element of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.shift array shift">
		<description></description>
		<name>Array.shift()</name>
		<note></note>
		<resume>Remove the first element of the array</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_slice array slice">
		<description></description>
		<name>array_slice()</name>
		<note></note>
		<resume>Extract a slice of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.slice array slice">
		<description></description>
		<name>Array.slice()</name>
		<note></note>
		<resume>Extract a slice of the array</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_unshift array unshift">
		<description></description>
		<name>array_unshift()</name>
		<note></note>
		<resume>Add one or more elements in the beginning of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.unshift array unshift">
		<description></description>
		<name>Array.unshift()</name>
		<note></note>
		<resume>Add one or more elements in the begginning of the array</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="arsort">
		<description></description>
		<name>arsort()</name>
		<note></note>
		<resume>Sort an array in reverse order and maintain key association</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="asort">
		<description></description>
		<name>asort()</name>
		<note></note>
		<resume>Sort an array and maintain key association</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="background">
		<description></description>
		<name>background</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;background-color&lt;/code&gt; — &lt;code&gt;background-image&lt;/code&gt; — &lt;code&gt;background-position&lt;/code&gt; — &lt;code&gt;background-repeat&lt;/code&gt; and &lt;code&gt;background-attachment&lt;/code&gt;</note>
		<resume>Sets all background properties</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-attachment background attachment">
		<description></description>
		<name>background-attachment</name>
		<note></note>
		<resume>Specify if a &lt;code&gt;background-image&lt;/code&gt; scrolls this the current element or is fixed within the wiewport</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-color background color">
		<description></description>
		<name>background-color</name>
		<note></note>
		<resume>Sets the background color of the current element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-image background image">
		<description></description>
		<name>background-image</name>
		<note></note>
		<resume>Sets the background image of the current element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-position background position">
		<description></description>
		<name>background-position</name>
		<note></note>
		<resume>Sets the background position in the current element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-repeat background repeat">
		<description></description>
		<name>background-repeat</name>
		<note></note>
		<resume>Specify if a &lt;code&gt;background-image&lt;/code&gt; is repeated and how</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="base64_decode base64 decode">
		<description></description>
		<name>base64_decode()</name>
		<note></note>
		<resume>Decode data encoded with MIME base64</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="base64_encode base64 encode">
		<description></description>
		<name>base64_encode()</name>
		<note></note>
		<resume>Encode data with MIME base64</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="basename">
		<description></description>
		<name>basename()</name>
		<note></note>
		<resume>Returns the ending element of a path</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":before ::before">
		<description></description>
		<name>:before</name>
		<note><strong>Alias:</strong> &lt;code&gt;::before&lt;/code&gt;</note>
		<resume>Create a pseudo-element whom is the first child of the matched element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-element</type>
	</item>

	<item search="border">
		<description></description>
		<name>border</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;border-bottom&lt;/code&gt; — &lt;code&gt;border-left&lt;/code&gt; — &lt;code&gt;border-right&lt;/code&gt; and &lt;code&gt;border-top&lt;/code&gt;</note>
		<resume>Sets the border to each side of the box</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-bottom border bottom">
		<description></description>
		<name>border-bottom</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;border-bottom-color&lt;/code&gt; — &lt;code&gt;border-bottom-style&lt;/code&gt; and &lt;code&gt;border-bottom-width&lt;/code&gt;</note>
		<resume>Sets the bottom border of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-bottom-left-radius border bottom left radius">
		<description></description>
		<name>border-bottom-left-radius</name>
		<note></note>
		<resume>Sets the radius to the bottom left corner of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-bottom-right-radius border bottom right radius">
		<description></description>
		<name>border-bottom-right-radius</name>
		<note></note>
		<resume>Sets the radius to bottom right corner of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-left border left">
		<description></description>
		<name>border-left</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;border-left-color&lt;/code&gt; — &lt;code&gt;border-left-style&lt;/code&gt; and &lt;code&gt;border-left-width&lt;/code&gt;</note>
		<resume>Sets the left border of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-radius border radius">
		<description></description>
		<name>border-radius</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;border-bottom-left-radius&lt;/code&gt; — &lt;code&gt;border-bottom-right-radius&lt;/code&gt; — &lt;code&gt;border-top-left-radius&lt;/code&gt; and &lt;code&gt;border-top-right-radius&lt;/code&gt;</note>
		<resume>Sets the radius to each corner of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-right border right">
		<description></description>
		<name>border-right</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;border-right-color&lt;/code&gt; — &lt;code&gt;border-right-style&lt;/code&gt; and &lt;code&gt;border-right-width&lt;/code&gt;</note>
		<resume>Sets the right border of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-top border top">
		<description></description>
		<name>border-top</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;border-top-color&lt;/code&gt; — &lt;code&gt;border-top-style&lt;/code&gt; and &lt;code&gt;border-top-width&lt;/code&gt;</note>
		<resume>Sets the top border of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-top-left-radius border top left radius">
		<description></description>
		<name>border-top-left-radius</name>
		<note></note>
		<resume>Sets the radius to the top left corner of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-top-right-radius border top right radius">
		<description></description>
		<name>border-top-right-radius</name>
		<note></note>
		<resume>Sets the radius to the top right corner of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="box-sizing box sizing">
		<description></description>
		<name>box-sizing</name>
		<note></note>
		<resume>Modify default CSS behavior to calculate width and height</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="ceil">
		<description></description>
		<name>ceil()</name>
		<note></note>
		<resume>Round decimal numbers up</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":checked">
		<description></description>
		<name>:checked</name>
		<note></note>
		<resume>Select an input when checked</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="chmod">
		<description></description>
		<name>chmod()</name>
		<note></note>
		<resume>Changes the file mode</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="chown">
		<description></description>
		<name>chown()</name>
		<note></note>
		<resume>Changes the file owner</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="closedir">
		<description></description>
		<name>closedir()</name>
		<note></note>
		<resume>Close a directory handle</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="color">
		<description></description>
		<name>color</name>
		<note></note>
		<resume>Sets the text color in an element and child elements</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="copy">
		<description></description>
		<name>copy()</name>
		<note></note>
		<resume>Copies a file</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="count">
		<description></description>
		<name>count()</name>
		<note><strong>Alias:</strong> &lt;code&gt;sizeof&lt;/code&gt;</note>
		<resume>Count elements in an array or count something in a Countable object</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="current">
		<description></description>
		<name>current()</name>
		<note></note>
		<resume>Return the current pointed element in an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="cursor">
		<description></description>
		<name>cursor</name>
		<note></note>
		<resume>Specify the cursor appearance when over an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="date">
		<description></description>
		<name>date()</name>
		<note></note>
		<resume>Format a date</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="date_default_timezone_set date default timezone set">
		<description></description>
		<name>date_default_timezone_set()</name>
		<note></note>
		<resume>Sets the default timezone used by date / time functions</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="date.now date now">
		<description></description>
		<name>Date.now()</name>
		<note></note>
		<resume>Return the current timestamp in milliseconds</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="display">
		<description></description>
		<name>display</name>
		<note></note>
		<resume>Modify the type of rendering of the element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="echo">
		<description></description>
		<name>echo</name>
		<note></note>
		<resume>Output strings</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Key-word</type>
	</item>

	<item search="end">
		<description></description>
		<name>end()</name>
		<note></note>
		<resume>Point to the last element of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="empty">
		<description></description>
		<name>empty()</name>
		<note></note>
		<resume>Finds whether an element is empty</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="fclose">
		<description></description>
		<name>fclose()</name>
		<note></note>
		<resume>Close an open file pointer</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="file_exist file exist">
		<description></description>
		<name>file_exist()</name>
		<note></note>
		<resume>Checks whether a file or a directory exists</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="filesize">
		<description></description>
		<name>filesize()</name>
		<note></note>
		<resume>Gets file size in bytes</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="floor">
		<description></description>
		<name>floor()</name>
		<note></note>
		<resume>Round decimal number down</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":focus">
		<description></description>
		<name>:focus</name>
		<note></note>
		<resume>Select element when focused</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="function.bind function bind">
		<description></description>
		<name>Function.bind()</name>
		<note></note>
		<resume>Creates a new function whose the provided context argument become the &lt;code&gt;this&lt;/code&gt; keyword</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="font">
		<description></description>
		<name>font</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;font-family&lt;/code&gt; — &lt;code&gt;font-size&lt;/code&gt; — &lt;code&gt;font-weight&lt;/code&gt; — &lt;code&gt;font-style&lt;/code&gt; — &lt;code&gt;font-variant&lt;/code&gt; and &lt;code&gt;line-height&lt;/code&gt;</note>
		<resume>Sets all font properties</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-family font family">
		<description></description>
		<name>font-family</name>
		<note></note>
		<resume>Sets the text font and specify callback fonts</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-size font size">
		<description></description>
		<name>font-size</name>
		<note></note>
		<resume>Sets the font height</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="-webkit-font-smoothing webkit-font-smoothing webkit font-smoothing webkit font smoothing">
		<description></description>
		<name>-webkit-font-smoothing</name>
		<note>Only in webkit browser</note>
		<resume>Controls the anti-aliasing when fonts are rendered</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-style font style">
		<description></description>
		<name>font-style</name>
		<note></note>
		<resume>Display the italic version of the current font</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-variant font variant">
		<description></description>
		<name>font-variant</name>
		<note></note>
		<resume>Display all lowercase letters as small capital letters</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-weight font weight">
		<description></description>
		<name>font-weight</name>
		<note></note>
		<resume>Specify the boldness of the current font</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="fopen">
		<description></description>
		<name>fopen()</name>
		<note></note>
		<resume>Open a file</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="hash">
		<description></description>
		<name>hash()</name>
		<note></note>
		<resume>Returns a hash string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="height">
		<description></description>
		<name>height</name>
		<note></note>
		<resume>Sets the height of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="implode">
		<description></description>
		<name>implode()</name>
		<note><strong>Alias:</strong> &lt;code&gt;join&lt;/code&gt;</note>
		<resume>Converts a string into an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_array is array">
		<description></description>
		<name>is_array()</name>
		<note></note>
		<resume>Finds whether an element is an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_bool is bool">
		<description></description>
		<name>is_bool()</name>
		<note></note>
		<resume>Finds whether an element is a boolean</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_dir is dir">
		<description></description>
		<name>is_dir()</name>
		<note></note>
		<resume>Finds whether an element is a directory</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_file is file">
		<description></description>
		<name>is_file()</name>
		<note></note>
		<resume>Finds whether an element is a file</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_float is float">
		<description></description>
		<name>is_float()</name>
		<note></note>
		<resume>Finds whether an element is a float</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_int is int">
		<description></description>
		<name>is_int()</name>
		<note></note>
		<resume>Finds whether an element is an integer</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_nan is nan">
		<description></description>
		<name>is_nan()</name>
		<note></note>
		<resume>Finds whether an element is &lt;code&gt;NaN&lt;/code&gt; (Not a Number)</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_null is null">
		<description></description>
		<name>is_null()</name>
		<note></note>
		<resume>Finds whether an element is &lt;code&gt;NULL&lt;/code&gt;</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_numeric is numeric">
		<description></description>
		<name>is_numeric()</name>
		<note></note>
		<resume>Finds whether an element is a number or a numeric string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_object is object">
		<description></description>
		<name>is_object()</name>
		<note></note>
		<resume>Finds whether an element is an object</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_string is string">
		<description></description>
		<name>is_string()</name>
		<note></note>
		<resume>Finds whether an element is a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_uploaded_file is uploaded file">
		<description></description>
		<name>is_uploaded_file()</name>
		<note></note>
		<resume>Finds whether an element was uploaded by HTTP POST</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="isset">
		<description></description>
		<name>isset()</name>
		<note></note>
		<resume>Finds whether a variable exists and is not &lt;code&gt;NULL&lt;/code&gt;</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="json_decode json decode">
		<description></description>
		<name>json_decode()</name>
		<note></note>
		<resume>Converts a JSON string into an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="json_encode json encode">
		<description></description>
		<name>json_encode()</name>
		<note></note>
		<resume>Converts an element into a JSON string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="key">
		<description></description>
		<name>key()</name>
		<note></note>
		<resume>Return the key value of the current element pointed in an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="krsort">
		<description></description>
		<name>krsort()</name>
		<note></note>
		<resume>Sort an array in reverse order by key</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="ksort">
		<description></description>
		<name>ksort()</name>
		<note></note>
		<resume>Sort an array by key</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="line-height line height">
		<description></description>
		<name>line-height</name>
		<note></note>
		<resume>Specify the height for a text line</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="ltrim">
		<description></description>
		<name>ltrim()</name>
		<note></note>
		<resume>Removes characters from the left extremity of a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="mail">
		<description></description>
		<name>mail()</name>
		<note></note>
		<resume>Send a mail</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="margin">
		<description></description>
		<name>margin</name>
		<note></note>
		<resume>Sets the margin to each side of an element</resume>
		<seealso>&lt;code&gt;margin-bottom&lt;/code&gt; — &lt;code&gt;margin-left&lt;/code&gt; — &lt;code&gt;margin-right&lt;/code&gt; — &lt;code&gt;margin-top&lt;/code&gt;</seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="mkdir">
		<description></description>
		<name>mkdir()</name>
		<note></note>
		<resume>Creates a directory</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="module.config module config">
		<description></description>
		<name>module.config()</name>
		<note></note>
		<resume>Configure providers or constant</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="module.controller module controller">
		<description></description>
		<name>module.controller()</name>
		<note></note>
		<resume>Creates a custom controller</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="module.factory module factory">
		<description></description>
		<name>module.factory()</name>
		<note></note>
		<resume>Creates a custom factory</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="module.service module service">
		<description></description>
		<name>module.service()</name>
		<note></note>
		<resume>Creates a custom service</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="mt_rand mt rand">
		<description></description>
		<name>mt_rand()</name>
		<note></note>
		<resume>Generates a random number</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="next">
		<description></description>
		<name>next()</name>
		<note></note>
		<resume>Point to the next element of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="ng-app ngapp">
		<description></description>
		<name>ng-app</name>
		<note></note>
		<resume>Auto-bootstrap an AngularJS application</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-controller ngcontroller">
		<description></description>
		<name>ng-controller</name>
		<note></note>
		<resume>Attaches a controller to the view element</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-hide nghide">
		<description></description>
		<name>ng-hide</name>
		<note></note>
		<resume>Hides or shows the given HTML element based on the expression provided</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-show ngshow">
		<description></description>
		<name>ng-show</name>
		<note></note>
		<resume>Shows or hides the given HTML element based on the expression provided</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-view ngview">
		<description></description>
		<name>ng-view</name>
		<note>Implements the &lt;$route&gt; module</note>
		<resume>Includes the rendered template of the current route into the main layout (index.html) file.</resume>
		<seealso></seealso>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="nl2br">
		<description></description>
		<name>nl2br()</name>
		<note></note>
		<resume>Converts all new line in a string into an HTML line break</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":not">
		<description></description>
		<name>:not(&lt;code&gt;selector&lt;/code&gt;)</name>
		<note></note>
		<resume>Select element if it not matches the selector in the &lt;code&gt;:not()&lt;/code&gt; function</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="opendir">
		<description></description>
		<name>opendir()</name>
		<note></note>
		<resume>Open a directory handle</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="outline">
		<description></description>
		<name>outline</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;outline-color&lt;/code&gt; — &lt;code&gt;outline-width&lt;/code&gt; and &lt;code&gt;outline-style&lt;/code&gt;</note>
		<resume>Sets the outline render of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="outline-color outline color">
		<description></description>
		<name>outline-color</name>
		<note></note>
		<resume>Sets the outline color of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="outline-style outline style">
		<description></description>
		<name>outline-style</name>
		<note></note>
		<resume>Sets the outline style of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="outline-width outline width">
		<description></description>
		<name>outline-width</name>
		<note></note>
		<resume>Sets the outline width of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="overflow">
		<description></description>
		<name>overflow</name>
		<note></note>
		<resume>Modify default CSS behavior when a text overflow a block element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="overflow-x">
		<description></description>
		<name>overflow-x</name>
		<note></note>
		<resume>Modify default CSS horizontal behavior when a text overflow a block element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="overflow-y">
		<description></description>
		<name>overflow-y</name>
		<note></note>
		<resume>Modify default CSS vertical behavior when a text overflow a block element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="padding">
		<description></description>
		<name>padding</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;padding-bottom&lt;/code&gt; — &lt;code&gt;padding-left&lt;/code&gt; — &lt;code&gt;padding-right&lt;/code&gt; and &lt;code&gt;padding-top&lt;/code&gt;</note>
		<resume>Sets the padding to each side of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="parseFloat parse float">
		<description></description>
		<name>parseFloat()</name>
		<note></note>
		<resume>Parses a string argument and returns a float number</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Function</type>
	</item>

	<item search="parseInt parse int">
		<description></description>
		<name>parseInt()</name>
		<note></note>
		<resume>Parses a string argument and returns an integer of the specified base</resume>
		<seealso></seealso>
		<tech>JS</tech>
		<type>Function</type>
	</item>

	<item search="pi">
		<description></description>
		<name>pi()</name>
		<note></note>
		<resume>Return the value of pi</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="pow">
		<description></description>
		<name>pow()</name>
		<note></note>
		<resume>Returns an exponential value</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="prev">
		<description></description>
		<name>prev()</name>
		<note></note>
		<resume>Point to the previous element of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="readdir">
		<description></description>
		<name>readdir()</name>
		<note></note>
		<resume>Read an entry from a directory handle</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rename">
		<description></description>
		<name>rename()</name>
		<note></note>
		<resume>Rename a file of a directory</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":required">
		<description></description>
		<name>:required</name>
		<note></note>
		<resume>Select &lt;code&gt;required&lt;/code&gt; inputs</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="reset">
		<description></description>
		<name>reset()</name>
		<note></note>
		<resume>Point to the first element of an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rmdir">
		<description></description>
		<name>rmdir()</name>
		<note></note>
		<resume>Remove an empty directory</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rsort">
		<description></description>
		<name>rsort()</name>
		<note></note>
		<resume>Sort an array in reverse order but don't maintain index association</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rtrim">
		<description></description>
		<name>rtrim()</name>
		<note></note>
		<resume>Removes characters from the right extremity of a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="serialize">
		<description></description>
		<name>serialize()</name>
		<note></note>
		<resume>Converts an element into a storable representation</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="shuffle">
		<description></description>
		<name>shuffle()</name>
		<note></note>
		<resume>Randomize the order of elements in an array</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="sqrt">
		<description></description>
		<name>sqrt()</name>
		<note></note>
		<resume>Returns the square root of an element</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="sort">
		<description></description>
		<name>sort()</name>
		<note></note>
		<resume>Sort an array but don't maintain index association</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="str_replace str replace">
		<description></description>
		<name>str_replace()</name>
		<note></note>
		<resume>Replace all occurrences of the search string with the replacement string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="str_shuffle str shuffle">
		<description></description>
		<name>str_shuffle()</name>
		<note></note>
		<resume>Randomly shuffles a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strip_tags strip tags">
		<description></description>
		<name>strip_tags()</name>
		<note></note>
		<resume>Removes HTML and PHP tags from a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strlen">
		<description></description>
		<name>strlen()</name>
		<note></note>
		<resume>Returns the string length</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strpos">
		<description></description>
		<name>strpos()</name>
		<note></note>
		<resume>Find the position of the first occurrence of a character in a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strrchr">
		<description></description>
		<name>strrchr()</name>
		<note></note>
		<resume>Find the last occurrence of a character in a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strrpos">
		<description></description>
		<name>strrpos()</name>
		<note></note>
		<resume>Find the position of the last occurrence of a character in a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strstr">
		<description></description>
		<name>strstr()</name>
		<note><strong>Alias:</strong> &lt;code&gt;strchr&lt;/code&gt;</note>
		<resume>Find the first occurrence of a character in a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="substr">
		<description></description>
		<name>substr()</name>
		<note></note>
		<resume>Returns part of a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="text-align text align">
		<description></description>
		<name>text-align</name>
		<note></note>
		<resume>Sets the alignment of the text of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="text-decoration text decoration">
		<description></description>
		<name>text-decoration</name>
		<note></note>
		<resume>Sets the text formatting &lt;code&gt;underline&lt;/code&gt;, &lt;code&gt;overline&lt;/code&gt; and &lt;code&gt;line-through&lt;/code&gt;</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="time">
		<description></description>
		<name>time()</name>
		<note></note>
		<resume>Return the current timestamp</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="transition">
		<description></description>
		<name>transition</name>
		<note><strong>Shortcut for:</strong> &lt;code&gt;transition-property&lt;/code&gt; — &lt;code&gt;transition-duration&lt;/code&gt; — &lt;code&gt;transition-delay&lt;/code&gt; and &lt;code&gt;transition-timing-function&lt;/code&gt;</note>
		<resume>Specify a transition when an element style property changes</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="transition-delay transition delay">
		<description></description>
		<name>transition-delay</name>
		<note></note>
		<resume>Sets a delay before a transition is played</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="transition-duration transition duration">
		<description></description>
		<name>transition-duration</name>
		<note></note>
		<resume>Sets how long a transition need to be played</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="transition-property transition property">
		<description></description>
		<name>transition-property</name>
		<note></note>
		<resume>Specify what properties shall be affect by the transition</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="trim">
		<description></description>
		<name>trim()</name>
		<note></note>
		<resume>Remove characters from both extremities of a string</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="unlink">
		<description></description>
		<name>unlink()</name>
		<note><strong>Alias:</strong> &lt;code&gt;delete&lt;/code&gt;</note>
		<resume>Deletes a file</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="unserialize">
		<description></description>
		<name>unserialize()</name>
		<note></note>
		<resume>Converts a storable representation into an PHP value</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":valid">
		<description></description>
		<name>:valid</name>
		<note></note>
		<resume>True if input is not empty and matches with the &lt;code&gt;type&lt;/code&gt; attribute</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="var_dump var dump">
		<description></description>
		<name>var_dump()</name>
		<note></note>
		<resume>Dumps information about a variable</resume>
		<seealso></seealso>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="width">
		<description></description>
		<name>width</name>
		<note></note>
		<resume>Sets the width of an element</resume>
		<seealso></seealso>
		<tech>CSS</tech>
		<type>Property</type>
	</item>


	<!--
	<item search="listen">
		<description></description>
		<name>listen()</name>
		<note></note>
		<resume>Server listen on given port attribute</resume>
		<seealso></seealso>
		<tech>NodeJS</tech>
		<type>Function</type>
	</item>
	-->
</items>