<?xml version= "1.0" encoding="UTF-8"?>

<items>

	<item search="a">
		<description>
<![CDATA[
### Syntax

	<a>lorem ipsum</a>

### Attributes

#### download

#### href

#### title

#### target
]]>
		</description>
		<name><![CDATA[`<a>`]]></name>
		<note></note>
		<resume><![CDATA[Defines a link or an anchor]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="addslashes">
		<description>
<![CDATA[
### Syntax

	(string) $misc = addslashes( (string) $str )
]]>
		</description>
		<name><![CDATA[`addslashes()`]]></name>
		<note></note>
		<resume><![CDATA[Add a backslash before quotes, double-quotes and backslashes in string variables]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":after ::after">
		<description></description>
		<name><![CDATA[`:after`]]></name>
		<note><![CDATA[**Alias:** `::after`]]></note>
		<resume><![CDATA[Create a pseudo-element whom is the last child of the matched element]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-element</type>
	</item>

	<item search="angular.foreach angular foreach">
		<description></description>
		<name><![CDATA[`angular.forEach()`]]></name>
		<note></note>
		<resume><![CDATA[Executes a provided function once per array or object element]]></resume>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="angular.module angular module">
		<description></description>
		<name><![CDATA[`angular.module()`]]></name>
		<note></note>
		<resume><![CDATA[Create, register and retrieve Angular modules]]></resume>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="array">
		<description>
<![CDATA[
### Syntax

	(array) $misc = (array) array ([ (mixed) $… ] );
]]>
		</description>
		<name><![CDATA[`array()`]]></name>
		<note><![CDATA[*Alias:* `[]`]]></note>
		<resume><![CDATA[Create a new array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array_diff array diff">
		<description>
<![CDATA[
### Syntax

	(array) $misc = array_diff ( (array) $array1 , (array) $array2 [, (array) $… ] );
]]>
		</description>
		<name><![CDATA[`array_diff()`]]></name>
		<note></note>
		<resume><![CDATA[Computes the difference between arrays]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.foreach array foreach">
		<description></description>
		<name><![CDATA[`Array.forEach()`]]></name>
		<note></note>
		<resume><![CDATA[Executes a provided function once per array element]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array.length array length">
		<description></description>
		<name><![CDATA[`Array.length`]]></name>
		<note></note>
		<resume><![CDATA[Return the number of elements of the array]]></resume>
		<tech>JS</tech>
		<type>Property</type>
	</item>

	<item search="array_pop array pop">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = array_pop ( (array) $array );
]]>
		</description>
		<name><![CDATA[`array_pop()`]]></name>
		<note></note>
		<resume><![CDATA[Remove the last element of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.pop array pop">
		<description></description>
		<name><![CDATA[`Array.pop()`]]></name>
		<note></note>
		<resume><![CDATA[Remove the last element of the array]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_push array push">
		<description>
<![CDATA[
### Syntax

	(int) $misc = array_push ( (array) $array , (mixed) $value1 [, (mixed) $… ] );
]]>
		</description>
		<name><![CDATA[`array_push()`]]></name>
		<note></note>
		<resume><![CDATA[Add one or more elements in the end of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.push array push">
		<description></description>
		<name><![CDATA[`Array.push()`]]></name>
		<note></note>
		<resume><![CDATA[Add one or more elements in the end of the array]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_shift array shift">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = array_shift ( (array) $array );
]]>
		</description>
		<name><![CDATA[`array_shift()`]]></name>
		<note></note>
		<resume><![CDATA[Remove the first element of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.shift array shift">
		<description></description>
		<name><![CDATA[`Array.shift()`]]></name>
		<note></note>
		<resume><![CDATA[Remove the first element of the array]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_slice array slice">
		<description>
<![CDATA[
### Syntax

	(array) $misc = array_slice ( (array) $array , (int) $offset [, (int) $length = NULL [, (bool) $preserve_keys = false ]] );
]]>
		</description>
		<name><![CDATA[`array_slice()`]]></name>
		<note></note>
		<resume><![CDATA[Extract a slice of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.slice array slice">
		<description></description>
		<name><![CDATA[`Array.slice()`]]></name>
		<note></note>
		<resume><![CDATA[Extract a slice of the array]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="array_unshift array unshift">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = array_unshift ( (array) $array , (mixed) $value1 [, mixed $… ] );
]]>
		</description>
		<name><![CDATA[`array_unshift()`]]></name>
		<note></note>
		<resume><![CDATA[Add one or more elements in the beginning of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="array.unshift array unshift">
		<description></description>
		<name><![CDATA[`Array.unshift()`]]></name>
		<note></note>
		<resume><![CDATA[Add one or more elements in the begginning of the array]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="arsort">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = arsort ( (array) $array [, (int) $sort_flags = SORT_REGULAR ] );
]]>
		</description>
		<name><![CDATA[`arsort()`]]></name>
		<note></note>
		<resume><![CDATA[Sort an array in reverse order and maintain key association]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="article">
		<description>
<![CDATA[
### Syntax

	<article>lorem ipsum</article>
]]>
		</description>
		<name><![CDATA[`article`]]></name>
		<note></note>
		<resume><![CDATA[Defines an article]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="asort">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = asort ( (array) $array [, (int) $sort_flags = SORT_REGULAR ] );
]]>
		</description>
		<name><![CDATA[`asort()`]]></name>
		<note></note>
		<resume><![CDATA[Sort an array and maintain key association]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="aside">
		<description>
<![CDATA[
### Syntax

	<aside>lorem ipsum</aside>
]]>
		</description>
		<name><![CDATA[`aside`]]></name>
		<note></note>
		<resume><![CDATA[Defines content aside from the page content]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="audio">
		<description>
<![CDATA[
### Syntax

	<audio>
		<source></source>
	</audio>

### Attributes

#### autoplay

#### controls

#### loop

#### muted

#### preload

#### src

#### volume
]]>
		</description>
		<name><![CDATA[`audio`]]></name>
		<note></note>
		<resume><![CDATA[Defines sound content]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="background">
		<description></description>
		<name><![CDATA[`background`]]></name>
		<note><![CDATA[**Shortcut for:** `background-color` — `background-image` — `background-position` — `background-repeat` and `background-attachment`]]></note>
		<resume><![CDATA[Sets all background properties]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-attachment background attachment">
		<description></description>
		<name><![CDATA[`background-attachment`]]></name>
		<note></note>
		<resume><![CDATA[Specify if a `background-image` scrolls this the current element or is fixed within the wiewport]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-color background color">
		<description></description>
		<name><![CDATA[`background-color`]]></name>
		<note></note>
		<resume><![CDATA[Sets the background color of the current element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-image background image">
		<description></description>
		<name><![CDATA[`background-image`]]></name>
		<note></note>
		<resume><![CDATA[Sets the background image of the current element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-position background position">
		<description></description>
		<name><![CDATA[`background-position`]]></name>
		<note></note>
		<resume><![CDATA[Sets the background position in the current element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="background-repeat background repeat">
		<description></description>
		<name><![CDATA[`background-repeat`]]></name>
		<note></note>
		<resume><![CDATA[Specify if a `background-image` is repeated and how]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="base64_decode base64 decode">
		<description>
<![CDATA[
### Syntax

	(string) $misc = base64_decode ( (string $data) [, (bool) $strict = false ] );
]]>
		</description>
		<name><![CDATA[`base64_decode()`]]></name>
		<note></note>
		<resume><![CDATA[Decode data encoded with MIME base64]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="base64_encode base64 encode">
		<description>
<![CDATA[
### Syntax			

	(string) $misc = base64_encode ( (string $data) );
]]>
		</description>
		<name><![CDATA[`base64_encode()`]]></name>
		<note></note>
		<resume><![CDATA[Encode data with MIME base64]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="basename">
		<description>
<![CDATA[
### Syntax

	(string) $misc = basename ( (string) $path [, (string) $suffix ] );
]]>
		</description>
		<name><![CDATA[`basename()`]]></name>
		<note></note>
		<resume><![CDATA[Returns the ending element of a path]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":before ::before">
		<description></description>
		<name><![CDATA[`:before`]]></name>
		<note><![CDATA[**Alias:** `::before`]]></note>
		<resume><![CDATA[Create a pseudo-element whom is the first child of the matched element]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-element</type>
	</item>

	<item search="body">
		<description>
<![CDATA[
### Syntax

	<body>
		lorem ipsum
	</body>
]]>
		</description>
		<name><![CDATA[`body`]]></name>
		<note></note>
		<resume><![CDATA[Defines the document's body]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="border">
		<description></description>
		<name><![CDATA[`border`]]></name>
		<note><![CDATA[**Shortcut for:** `border-bottom` — `border-left` — `border-right` and `border-top`]]></note>
		<resume><![CDATA[Sets the border to each side of the box]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-bottom border bottom">
		<description></description>
		<name><![CDATA[`border-bottom`]]></name>
		<note><![CDATA[**Shortcut for:** `border-bottom-color` — `border-bottom-style` and `border-bottom-width`]]></note>
		<resume><![CDATA[Sets the bottom border of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-bottom-left-radius border bottom left radius">
		<description></description>
		<name><![CDATA[`border-bottom-left-radius`]]></name>
		<note></note>
		<resume><![CDATA[Sets the radius to the bottom left corner of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-bottom-right-radius border bottom right radius">
		<description></description>
		<name><![CDATA[`border-bottom-right-radius`]]></name>
		<note></note>
		<resume><![CDATA[Sets the radius to bottom right corner of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-left border left">
		<description></description>
		<name><![CDATA[`border-left`]]></name>
		<note><![CDATA[**Shortcut for:** `border-left-color` — `border-left-style` and `border-left-width`]]></note>
		<resume><![CDATA[Sets the left border of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-radius border radius">
		<description></description>
		<name><![CDATA[`border-radius`]]></name>
		<note><![CDATA[**Shortcut for:** `border-bottom-left-radius` — `border-bottom-right-radius` — `border-top-left-radius` and `border-top-right-radius`]]></note>
		<resume><![CDATA[Sets the radius to each corner of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-right border right">
		<description></description>
		<name><![CDATA[`border-right`]]></name>
		<note><![CDATA[**Shortcut for:** `border-right-color` — `border-right-style` and `border-right-width`]]></note>
		<resume><![CDATA[Sets the right border of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-top border top">
		<description></description>
		<name><![CDATA[`border-top`]]></name>
		<note><![CDATA[**Shortcut for:** `border-top-color` — `border-top-style` and `border-top-width`]]></note>
		<resume><![CDATA[Sets the top border of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-top-left-radius border top left radius">
		<description></description>
		<name><![CDATA[`border-top-left-radius`]]></name>
		<note></note>
		<resume><![CDATA[Sets the radius to the top left corner of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="border-top-right-radius border top right radius">
		<description></description>
		<name><![CDATA[`border-top-right-radius`]]></name>
		<note></note>
		<resume><![CDATA[Sets the radius to the top right corner of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="box-sizing box sizing">
		<description></description>
		<name><![CDATA[`box-sizing`]]></name>
		<note></note>
		<resume><![CDATA[Modify default CSS behavior to calculate width and height]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="br">
		<description>
<![CDATA[
### Syntax

	<br>
]]>
		</description>
		<name><![CDATA[`br`]]></name>
		<note></note>
		<resume><![CDATA[Defines a single line-break]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="button">
		<description>
<![CDATA[
### Syntax

	<button>

### Attributes

#### disabled

#### name

#### type

#### value
]]>
		</description>
		<name><![CDATA[`button`]]></name>
		<note></note>
		<resume><![CDATA[Defines a clickable button]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="canvas">
		<description>
<![CDATA[
### Syntax

	<canvas>lorem ipsum</canvas>
]]>
		</description>
		<name><![CDATA[`canvas`]]></name>
		<note></note>
		<resume><![CDATA[Defines an area used to draw graphics, via scripting (javascript)]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="ceil">
		<description>
<![CDATA[
### Syntax

	(float) $misc = ceil ( (float) $value );
]]>
		</description>
		<name><![CDATA[`ceil()`]]></name>
		<note></note>
		<resume><![CDATA[Round decimal numbers up]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":checked">
		<description></description>
		<name><![CDATA[`:checked`]]></name>
		<note></note>
		<resume><![CDATA[Select an input when checked]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="chmod">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = chmod ( (string) $filename , (int) $mode );
]]>
		</description>
		<name><![CDATA[`chmod()`]]></name>
		<note></note>
		<resume><![CDATA[Changes the file mode]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="chown">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = chown ( (string) $filename , (mixed) $user );
]]>
		</description>
		<name><![CDATA[`chown()`]]></name>
		<note></note>
		<resume><![CDATA[Changes the file owner]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="closedir">
		<description>
<![CDATA[
### Syntax

	(void) closedir ([ (resource) $dir_handle ] );
]]>
		</description>
		<name><![CDATA[`closedir()`]]></name>
		<note></note>
		<resume><![CDATA[Close a directory handle]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="code">
		<description>
<![CDATA[
### Syntax

	<code>lorem ipsum</code>
]]>
		</description>
		<name><![CDATA[`code`]]></name>
		<note></note>
		<resume><![CDATA[Defines a piece of computer code]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="color">
		<description></description>
		<name><![CDATA[`color`]]></name>
		<note></note>
		<resume><![CDATA[Sets the text color in an element and child elements]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="copy">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = copy ( (string) $source , (string) $dest [, (resource) $context ] );
]]>
		</description>
		<name><![CDATA[`copy()`]]></name>
		<note></note>
		<resume><![CDATA[Copies a file]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="count">
		<description>
<![CDATA[
### Syntax

	(int) $misc = ( (mixed) $array_or_countable [, (int) $mode = COUNT_NORMAL ] );
]]>
		</description>
		<name><![CDATA[`count()`]]></name>
		<note><![CDATA[**Alias:** `sizeof`]]></note>
		<resume><![CDATA[Count elements in an array or count something in a Countable object]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="current">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = current ( (array) $array );
]]>
		</description>
		<name><![CDATA[`current()`]]></name>
		<note></note>
		<resume><![CDATA[Return the current pointed element in an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="cursor">
		<description></description>
		<name><![CDATA[`cursor`]]></name>
		<note></note>
		<resume><![CDATA[Specify the cursor appearance when over an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="date">
		<description>
<![CDATA[
### Syntax

	(string) $misc = date ( (string) $format [, (int) $timestamp = time() ] );
]]>
		</description>
		<name><![CDATA[`date()`]]></name>
		<note></note>
		<resume><![CDATA[Format a date]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="date_default_timezone_set date default timezone set">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = date_default_timezone_set ( (string) $timezone_identifier );
]]>
		</description>
		<name><![CDATA[`date_default_timezone_set()`]]></name>
		<note></note>
		<resume><![CDATA[Sets the default timezone used by date / time functions]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="date.now date now">
		<description></description>
		<name><![CDATA[`Date.now()`]]></name>
		<note></note>
		<resume><![CDATA[Return the current timestamp in milliseconds]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="display">
		<description></description>
		<name><![CDATA[`display`]]></name>
		<note></note>
		<resume><![CDATA[Modify the type of rendering of the element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="div">
		<description>
<![CDATA[
### Syntax

	<div>lorem ipsum</div>
]]>
		</description>
		<name><![CDATA[`div`]]></name>
		<note></note>
		<resume><![CDATA[Defines a section in a document]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="echo">
		<description>
<![CDATA[
### Syntax

	(void) echo ( (string) $arg1 [, (string) $... ] );
]]>
		</description>
		<name><![CDATA[`echo`]]></name>
		<note></note>
		<resume><![CDATA[Output strings]]></resume>
		<tech>PHP</tech>
		<type>Key-word</type>
	</item>

	<item search="em">
		<description>
<![CDATA[
### Syntax

	<em>lorem ipsum</em>
]]>
		</description>
		<name><![CDATA[`em`]]></name>
		<note><![CDATA[**Alias:** <i> (obselete)]]></note>
		<resume><![CDATA[Defines emphazed text]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="end">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = end ( (array) $array );
]]>
		</description>
		<name><![CDATA[`end()`]]></name>
		<note></note>
		<resume><![CDATA[Point to the last element of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="empty">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = empty ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`empty()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is empty]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="explode">
		<description>
<![CDATA[
### Syntax

	(array) $misc = explode ( (string) $delimiter , (string) $string [, (int) $limit ] );
]]>
		</description>
		<name><![CDATA[`explode()`]]></name>
		<note></note>
		<resume><![CDATA[Split a string into an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="fclose">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = fclose ( (resource) $handle );
]]>
		</description>
		<name><![CDATA[`fclose()`]]></name>
		<note></note>
		<resume><![CDATA[Close an open file pointer]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="fieldset">
		<description>
<![CDATA[
### Syntax

	<fieldset>lorem ipsum</fieldset>
]]>
		</description>
		<name><![CDATA[`fieldset`]]></name>
		<note></note>
		<resume><![CDATA[Group related element in a form]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="figcaption">
		<description>
<![CDATA[
### Syntax

	<figure>
		<figcaption>lorem ipsum</figcaption>
	</figure>
]]>
		</description>
		<name><![CDATA[`figcaption`]]></name>
		<note></note>
		<resume><![CDATA[Defines a caption for a `<figure>` element]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="figure">
		<description>
<![CDATA[
### Syntax

	<figure>lorem ipsum</figure>
]]>
		</description>
		<name><![CDATA[`figure`]]></name>
		<note></note>
		<resume><![CDATA[Specifies self-contained content]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="file_exist file exist">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = file_exists ( (string) $filename );
]]>
		</description>
		<name><![CDATA[`file_exist()`]]></name>
		<note></note>
		<resume><![CDATA[Checks whether a file or a directory exists]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="filesize">
		<description>
<![CDATA[
### Syntax

	(int) $misc = filesize ( (string) $filename );
]]>
		</description>
		<name><![CDATA[`filesize()`]]></name>
		<note></note>
		<resume><![CDATA[Gets file size in bytes]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="floor">
		<description>
<![CDATA[
### Syntax

	(float) $misc = floor ( (float) $value );
]]>
		</description>
		<name><![CDATA[`floor()`]]></name>
		<note></note>
		<resume><![CDATA[Round decimal number down]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":focus">
		<description></description>
		<name><![CDATA[`:focus`]]></name>
		<note></note>
		<resume><![CDATA[Select element when focused]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="font">
		<description></description>
		<name><![CDATA[`font`]]></name>
		<note><![CDATA[**Shortcut for:** `font-family` — `font-size` — `font-weight` — `font-style` — `font-variant` and `line-height`]]></note>
		<resume><![CDATA[Sets all font properties]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-family font family">
		<description></description>
		<name><![CDATA[`font-family`]]></name>
		<note></note>
		<resume><![CDATA[Sets the text font and specify callback fonts]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-size font size">
		<description></description>
		<name><![CDATA[`font-size`]]></name>
		<note></note>
		<resume><![CDATA[Sets the font height]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="-webkit-font-smoothing webkit-font-smoothing webkit font-smoothing webkit font smoothing">
		<description></description>
		<name><![CDATA[`-webkit-font-smoothing`]]></name>
		<note><![CDATA[Only in webkit browsers]]></note>
		<resume><![CDATA[Controls the anti-aliasing when fonts are rendered]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-style font style">
		<description></description>
		<name><![CDATA[`font-style`]]></name>
		<note></note>
		<resume><![CDATA[Display the italic version of the current font]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-variant font variant">
		<description></description>
		<name><![CDATA[`font-variant`]]></name>
		<note></note>
		<resume><![CDATA[Display all lowercase letters as small capital letters]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="font-weight font weight">
		<description></description>
		<name><![CDATA[`font-weight`]]></name>
		<note></note>
		<resume><![CDATA[Specify the boldness of the current font]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="footer">
		<description>
<![CDATA[
### Syntax

	<footer>lorem ipsum</footer>
]]>
		</description>
		<name><![CDATA[`footer`]]></name>
		<note></note>
		<resume><![CDATA[Defines a footer for a document or `<section>`]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="fopen">
		<description>
<![CDATA[
### Syntax

	(resource) $misc = fopen ( (string) $filename , (string) $mode [, (bool) $use_include_path = (false) [, (resource) $context ]] );
]]>
		</description>
		<name><![CDATA[`fopen()`]]></name>
		<note></note>
		<resume><![CDATA[Open a file]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="form">
		<description>
<![CDATA[
### Syntax

	<form>lorem ipsum</form>

### Attributes

#### action

#### enctype

#### method

#### name
]]>
		</description>
		<name><![CDATA[`form`]]></name>
		<note></note>
		<resume><![CDATA[Defines a HTML for for user inputs]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="function.bind function bind">
		<description></description>
		<name><![CDATA[`Function.bind()`]]></name>
		<note></note>
		<resume><![CDATA[Creates a new function whose the provided context argument become the `this` keyword]]></resume>
		<tech>JS</tech>
		<type>Method</type>
	</item>

	<item search="h1 h2 h3 h4 h5 h6">
		<description>
<![CDATA[
### Syntax

	<h1>lorem ipsum</h1>
]]>
		</description>
		<name><![CDATA[`h1 to h6`]]></name>
		<note></note>
		<resume><![CDATA[Defines HTML headings]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="hash">
		<description>
<![CDATA[
### Syntax

	(string) $misc = hash ( (string $algo) , (string) $data [, (bool) $raw_output = false ] );
]]>
		</description>
		<name><![CDATA[`hash()`]]></name>
		<note></note>
		<resume><![CDATA[Returns a hash string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="head">
		<description>
<![CDATA[
### Syntax

	<head>
		lorem ipsum
	</head>
]]>
		</description>
		<name><![CDATA[`head`]]></name>
		<note></note>
		<resume><![CDATA[Defines information about the document]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="header">
		<description>
<![CDATA[
### Syntax

	<header>lorem ipsum</header>
]]>
		</description>
		<name><![CDATA[`header`]]></name>
		<note></note>
		<resume><![CDATA[Defines a header for a document or section]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="height">
		<description></description>
		<name><![CDATA[`height`]]></name>
		<note></note>
		<resume><![CDATA[Sets the height of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="html">
		<description>
<![CDATA[
### Syntax

	<html>
		lorem ipsum
	</html>
]]>
		</description>
		<name><![CDATA[`html`]]></name>
		<note></note>
		<resume><![CDATA[Defines the root of a HTML document]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="$http">
		<description></description>
		<name><![CDATA[`$http`]]></name>
		<note></note>
		<resume><![CDATA[Facilitates communication with the remote HTTP servers via the XMLHttpRequest object or via JSONP]]></resume>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="img">
		<description>
<![CDATA[
### Syntax

	<img>

### Attributes

#### alt

#### height

#### src

#### target

#### title

#### width
]]>
		</description>
		<name><![CDATA[`img`]]></name>
		<note></note>
		<resume><![CDATA[Defines an image]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="implode">
		<description>
<![CDATA[
### Syntax

	(string) $misc = implode ( (string) $glue , (array) $pieces );
 
or

	(string) $misc = implode ( (array) $pieces );
]]>
		</description>
		<name><![CDATA[`implode()`]]></name>
		<note><![CDATA[**Alias:** `join`]]></note>
		<resume><![CDATA[Converts an array into a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="input">
		<description>
<![CDATA[
### Syntax

	<input>

#### autocomplete

#### autofocus

#### checked

#### disabled

#### maxlength

#### multiple

#### name

#### placeholder

#### readonly

#### required

#### size

#### type

#### value
]]>
		</description>
		<name><![CDATA[`input`]]></name>
		<note></note>
		<resume><![CDATA[Defines an input control]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="is_array is array">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_array ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_array()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_bool is bool">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_bool ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_bool()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is a boolean]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_dir is dir">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_dir ( (string) $filename );
]]>
		</description>
		<name><![CDATA[`is_dir()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is a directory]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_file is file">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_file ( (string) $filename );
]]>
		</description>
		<name><![CDATA[`is_file()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is a file]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_float is float">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_float ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_float()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is a float]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_int is int">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_int ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_int()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is an integer]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_nan is nan">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_nan ( (float) $val );
]]>
		</description>
		<name><![CDATA[`is_nan()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is `NaN` (Not a Number)]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_null is null">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_null ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_null()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is `NULL`]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_numeric is numeric">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_numeric ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_numeric()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is a number or a numeric string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_object is object">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_object ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_object()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is an object]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_string is string">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_string ( (mixed) $var );
]]>
		</description>
		<name><![CDATA[`is_string()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element is a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="is_uploaded_file is uploaded file">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = is_uploaded_file ( (string) $filename );
]]>
		</description>
		<name><![CDATA[`is_uploaded_file()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether an element was uploaded by HTTP POST]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="isset">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = isset ( (mixed) $var [, (mixed) $… ] );
]]>
		</description>
		<name><![CDATA[`isset()`]]></name>
		<note></note>
		<resume><![CDATA[Finds whether a variable exists and is not `NULL`]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="json_decode json decode">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = json_decode ( (string) $json [, (bool) $assoc = false [, (int) $depth = 512 [, (int) $options = 0 ]]] );
]]>
		</description>
		<name><![CDATA[`json_decode()`]]></name>
		<note></note>
		<resume><![CDATA[Converts a JSON string into an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="json_encode json encode">
		<description>
<![CDATA[
### Syntax

	(string) $misc = json_encode ( (mixed) $value [, (int) $options = 0 [, (int) $depth = 512 ]] );
]]>
		</description>
		<name><![CDATA[`json_encode()`]]></name>
		<note></note>
		<resume><![CDATA[Converts an element into a JSON string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="key">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = key ( (array) $array );
]]>
		</description>
		<name><![CDATA[`key()`]]></name>
		<note></note>
		<resume><![CDATA[Return the key value of the current element pointed in an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="krsort">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = krsort ( (array) $array [, (int) $sort_flags = SORT_REGULAR ] );
]]>
		</description>
		<name><![CDATA[`krsort()`]]></name>
		<note></note>
		<resume><![CDATA[Sort an array in reverse order by key]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="ksort">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = ksort ( (array) $array [, (int) $sort_flags = SORT_REGULAR ] );
]]>
		</description>
		<name><![CDATA[`ksort()`]]></name>
		<note></note>
		<resume><![CDATA[Sort an array by key]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="label">
		<description>
<![CDATA[
### Syntax

	<label>lorem ipsum</label>

### Attributes

#### for
]]>
		</description>
		<name><![CDATA[`label`]]></name>
		<note></note>
		<resume><![CDATA[Defines a label for an `<input>` element]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="legend">
		<description>
<![CDATA[
### Syntax

	<fieldset>
		<legend>lorem ipsum</legend>
	</fieldset>
]]>
		</description>
		<name><![CDATA[`legend`]]></name>
		<note></note>
		<resume><![CDATA[Defines a legend for a `<fieldset>` element]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="li">
		<description>
<![CDATA[
### Syntax

	<ul>
		<li>lorem ipsum</li>
	</ul>

or

	<ol>
		<li>lorem ipsum</li>
	</ol>
]]>
		</description>
		<name><![CDATA[`li`]]></name>
		<note></note>
		<resume><![CDATA[Defines a list item]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="line-height line height">
		<description></description>
		<name><![CDATA[`line-height`]]></name>
		<note></note>
		<resume><![CDATA[Specify the height for a text line]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="ltrim">
		<description>
<![CDATA[
### Syntax

	(string) $misc = ltrim ( (string) $str [, (string) $character_mask ] );
]]>
		</description>
		<name><![CDATA[`ltrim()`]]></name>
		<note></note>
		<resume><![CDATA[Removes characters from the left extremity of a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="mail">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = mail ( (string) $to , (string) $subject , (string) $message [, (string) $additional_headers [, (string) $additional_parameters ]] );
]]>
		</description>
		<name><![CDATA[`mail()`]]></name>
		<note></note>
		<resume><![CDATA[Send a mail]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="main">
		<description>
<![CDATA[
### Syntax

	<main>lorem ipsum</main>
]]>
		</description>
		<name><![CDATA[`main`]]></name>
		<note></note>
		<resume><![CDATA[Defines the main content of a document]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="margin">
		<description></description>
		<name><![CDATA[`margin`]]></name>
		<note></note>
		<resume><![CDATA[Sets the margin to each side of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="menu">
		<description>
<![CDATA[
### Syntax

	<menu>lorem ipsum</menu>
]]>
		</description>
		<name><![CDATA[`menu`]]></name>
		<note></note>
		<resume><![CDATA[Defines a list / menu of command]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="meta">
		<description>
<![CDATA[
### Syntax

	<meta>

### Attributes

#### charset

#### content

#### http-equiv

#### name
]]>
		</description>
		<name><![CDATA[`meta`]]></name>
		<note></note>
		<resume><![CDATA[Defines metadata about a HTML document]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="mkdir">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = mkdir ( (string) $pathname [, (int) $mode = 0777 [, (bool) $recursive = false [, (resource) $context ]]] );
]]>
		</description>
		<name><![CDATA[`mkdir()`]]></name>
		<note></note>
		<resume><![CDATA[Creates a directory]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="module.config module config">
		<description></description>
		<name><![CDATA[`module.config()`]]></name>
		<note></note>
		<resume><![CDATA[Configure providers or constant]]></resume>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="module.controller module controller">
		<description></description>
		<name><![CDATA[`module.controller()`]]></name>
		<note></note>
		<resume><![CDATA[Creates a custom controller]]></resume>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="module.factory module factory">
		<description></description>
		<name><![CDATA[`module.factory()`]]></name>
		<note></note>
		<resume><![CDATA[Creates a custom factory]]></resume>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="module.service module service">
		<description></description>
		<name><![CDATA[`module.service()`]]></name>
		<note></note>
		<resume><![CDATA[Creates a custom service]]></resume>
		<tech>AngularJS</tech>
		<type>Function</type>
	</item>

	<item search="mt_rand mt rand">
		<description>
<![CDATA[
### Syntax

	(int) $misc =  mt_rand ( void );

or

	(int) $misc = mt_rand ( (int) $min , (int) $max );
]]>
		</description>
		<name><![CDATA[`mt_rand()`]]></name>
		<note></note>
		<resume><![CDATA[Generates a random number]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="nav">
		<description>
<![CDATA[
### Syntax

	<nav>lorem ipsum</nav>
]]>
		</description>
		<name><![CDATA[`nav`]]></name>
		<note></note>
		<resume><![CDATA[Defines navigation links]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="next">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = next ( (array) $array );
]]>
		</description>
		<name><![CDATA[`next()`]]></name>
		<note></note>
		<resume><![CDATA[Point to the next element of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="ng-app ngapp">
		<description></description>
		<name><![CDATA[`ng-app`]]></name>
		<note></note>
		<resume><![CDATA[Auto-bootstrap an AngularJS application]]></resume>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-controller ngcontroller">
		<description></description>
		<name><![CDATA[`ng-controller`]]></name>
		<note></note>
		<resume><![CDATA[Attaches a controller to the view element]]></resume>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-hide nghide">
		<description></description>
		<name><![CDATA[`ng-hide`]]></name>
		<note></note>
		<resume><![CDATA[Hides or shows the given HTML element based on the expression provided]]></resume>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-show ngshow">
		<description></description>
		<name><![CDATA[`ng-show`]]></name>
		<note></note>
		<resume><![CDATA[Shows or hides the given HTML element based on the expression provided]]></resume>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="ng-view ngview">
		<description></description>
		<name><![CDATA[`ng-view`]]></name>
		<note><![CDATA[Implements the `route` module]]></note>
		<resume><![CDATA[Includes the rendered template of the current route into the main layout (index.html) file.]]></resume>
		<tech>AngularJS</tech>
		<type>Attribute</type>
	</item>

	<item search="nl2br">
		<description>
<![CDATA[
### Syntax

	(string) $misc = nl2br ( (string) $string [, (bool) $is_xhtml = true ] );
]]>
		</description>
		<name><![CDATA[`nl2br()`]]></name>
		<note></note>
		<resume><![CDATA[Converts all new line in a string into an HTML line break]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="noscript">
		<description>
<![CDATA[
### Syntax

	<noscript>lorem ipsum</noscript>
]]>
		</description>
		<name><![CDATA[`noscript`]]></name>
		<note></note>
		<resume><![CDATA[Defines an alternate content for user that do not support client-side scripts]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search=":not">
		<description></description>
		<name><![CDATA[`:not(selector)`]]></name>
		<note></note>
		<resume><![CDATA[Select element if it not matches the selector in the `:not()` function]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="ol">
		<description>
<![CDATA[
### Syntax

	<ol>
		<li>lorem ipsum</li>
	</ol>
]]>
		</description>
		<name><![CDATA[`ol`]]></name>
		<note></note>
		<resume><![CDATA[Defines an ordored list]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="opendir">
		<description>
<![CDATA[
### Syntax

	(resource) $misc = opendir ( (string) $path [, (resource) $context ] );
]]>
		</description>
		<name><![CDATA[`opendir()`]]></name>
		<note></note>
		<resume><![CDATA[Open a directory handle]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="optgroup">
		<description>
<![CDATA[
### Syntax

	<select>
		<optgroup>
			<option>lorem ipsum</option>
		</optgroup>
	</select>

### Attributes

#### disabled

#### label
]]>
		</description>
		<name><![CDATA[`optgroup`]]></name>
		<note></note>
		<resume><![CDATA[Defines a group of related options in a `<select>`]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="option">
		<description>
<![CDATA[
### Syntax

	<select>
		<option>lorem ipsum</option>
	</select>

or

	<select>
		<optgroup>
			<option>lorem ipsum</option>
		</optgroup>
	</select>

### Attributes

#### disabled

#### label

#### selected

#### value
]]>
		</description>
		<name><![CDATA[`option`]]></name>
		<note></note>
		<resume><![CDATA[Defines an option in a `<select>`]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="outline">
		<description></description>
		<name><![CDATA[`outline`]]></name>
		<note><![CDATA[**Shortcut for:** `outline-color` — `outline-width` and `outline-style`]]></note>
		<resume><![CDATA[Sets the outline render of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="outline-color outline color">
		<description></description>
		<name><![CDATA[`outline-color`]]></name>
		<note></note>
		<resume><![CDATA[Sets the outline color of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="outline-style outline style">
		<description></description>
		<name><![CDATA[`outline-style`]]></name>
		<note></note>
		<resume><![CDATA[Sets the outline style of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="outline-width outline width">
		<description></description>
		<name><![CDATA[`outline-width`]]></name>
		<note></note>
		<resume><![CDATA[Sets the outline width of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="overflow">
		<description></description>
		<name><![CDATA[`overflow`]]></name>
		<note></note>
		<resume><![CDATA[Modify default CSS behavior when a text overflow a block element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="overflow-x">
		<description></description>
		<name><![CDATA[`overflow-x`]]></name>
		<note></note>
		<resume><![CDATA[Modify default CSS horizontal behavior when a text overflow a block element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="overflow-y">
		<description></description>
		<name><![CDATA[`overflow-y`]]></name>
		<note></note>
		<resume><![CDATA[Modify default CSS vertical behavior when a text overflow a block element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="p">
		<description>
<![CDATA[
### Syntax

	<p>lorem ipsum</p>
]]>
		</description>
		<name><![CDATA[`p`]]></name>
		<note></note>
		<resume><![CDATA[Defines a paragraph]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="padding">
		<description></description>
		<name><![CDATA[`padding`]]></name>
		<note><![CDATA[**Shortcut for:** `padding-bottom` — `padding-left` — `padding-right` and `padding-top`]]></note>
		<resume><![CDATA[Sets the padding to each side of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="parseFloat parse float">
		<description></description>
		<name><![CDATA[`parseFloat()`]]></name>
		<note></note>
		<resume><![CDATA[Parses a string argument and returns a float number]]></resume>
		<tech>JS</tech>
		<type>Function</type>
	</item>

	<item search="parseInt parse int">
		<description></description>
		<name><![CDATA[`parseInt()`]]></name>
		<note></note>
		<resume><![CDATA[Parses a string argument and returns an integer of the specified base]]></resume>
		<tech>JS</tech>
		<type>Function</type>
	</item>

	<item search="pi">
		<description>
<![CDATA[
### Syntax

	(float) $misc = pi ( void );
]]>
		</description>
		<name><![CDATA[`pi()`]]></name>
		<note></note>
		<resume><![CDATA[Return the value of pi]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="pow">
		<description>
<![CDATA[
### Syntax

	(number) $misc = pow ( (number) $base , (number) $exp );
]]>
		</description>
		<name><![CDATA[`pow()`]]></name>
		<note></note>
		<resume><![CDATA[Returns an exponential value]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="pre">
		<description>
<![CDATA[
### Syntax

	<pre>lorem ipsum</pre>
]]>
		</description>
		<name><![CDATA[`pre`]]></name>
		<note></note>
		<resume><![CDATA[Defines preformatted text]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="prev">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = prev ( (array) $array );
]]>
		</description>
		<name><![CDATA[`prev()`]]></name>
		<note></note>
		<resume><![CDATA[Point to the previous element of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="$q">
		<description></description>
		<name><![CDATA[`$q`]]></name>
		<note></note>
		<resume><![CDATA[A promise / deferred implementation]]></resume>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="readdir">
		<description>
<![CDATA[
### Syntax

	(string) $misc = readdir ( [ (resource) $dir_handle ] );
]]>
		</description>
		<name><![CDATA[`readdir()`]]></name>
		<note></note>
		<resume><![CDATA[Read an entry from a directory handle]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rename">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = rename ( (string) $oldname , (string) $newname [, (resource) $context ] );
]]>
		</description>
		<name><![CDATA[`rename()`]]></name>
		<note></note>
		<resume><![CDATA[Rename a file of a directory]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":required">
		<description></description>
		<name><![CDATA[`:required`]]></name>
		<note></note>
		<resume><![CDATA[Select `required` inputs]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="reset">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = reset ( (array) $array );
]]>
		</description>
		<name><![CDATA[`reset()`]]></name>
		<note></note>
		<resume><![CDATA[Point to the first element of an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rmdir">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = rmdir ( (string) $dirname [, (resource) $context ] );
]]>
		</description>
		<name><![CDATA[`rmdir()`]]></name>
		<note></note>
		<resume><![CDATA[Remove an empty directory]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="$rootScope">
		<description></description>
		<name><![CDATA[`$rootScope`]]></name>
		<note></note>
		<resume><![CDATA[Global scope of the application]]></resume>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="rsort">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = rsort ( (array) $array [, (int) $sort_flags = SORT_REGULAR ] );
]]>
		</description>
		<name><![CDATA[`rsort()`]]></name>
		<note></note>
		<resume><![CDATA[Sort an array in reverse order but don't maintain index association]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="rtrim">
		<description>
<![CDATA[
### Syntax

	(string) $misc = rtrim ( (string) $str [, (string) $character_mask ] );
]]>
		</description>
		<name><![CDATA[`rtrim()`]]></name>
		<note></note>
		<resume><![CDATA[Removes characters from the right extremity of a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="$scope">
		<description></description>
		<name><![CDATA[`$scope`]]></name>
		<note></note>
		<resume><![CDATA[Current scope of the controller]]></resume>
		<tech>AngularJS</tech>
		<type>Service</type>
	</item>

	<item search="script">
		<description>
<![CDATA[
### Syntax

	<script>lorem ipsum</script>

### Attributes

#### async

#### src

#### type
]]>
		</description>
		<name><![CDATA[`script`]]></name>
		<note></note>
		<resume><![CDATA[Defines a client-side script]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="section">
		<description>
<![CDATA[
### Syntax

	<section>lorem ipsum</section>
]]>
		</description>
		<name><![CDATA[`section`]]></name>
		<note></note>
		<resume><![CDATA[Defines a section in a document]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="select">
		<description>
<![CDATA[
### Syntax

	<select>
		<option>lorem ipsum</option>
	</select>

or

	<select>
		<optgroup>
			<option>lorem ipsum</option>
		</optgroup>
	</select>

### Attributes

#### autofocus

#### disabled

#### multiple

#### name

#### required
]]>
		</description>
		<name><![CDATA[`select`]]></name>
		<note></note>
		<resume><![CDATA[Defines a drop-down list]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="serialize">
		<description>
<![CDATA[
### Syntax

	(string) $misc = serialize ( (mixed) $value );
]]>
		</description>
		<name><![CDATA[`serialize()]]></name>
		<note></note>
		<resume><![CDATA[Converts an element into a storable representation]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="shuffle">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = shuffle ( (array) $array );
]]>
		</description>
		<name><![CDATA[`shuffle()`]]></name>
		<note></note>
		<resume><![CDATA[Randomize the order of elements in an array]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="source">
		<description>
<![CDATA[
### Syntax

	<audio>
		<source>
	</audio>

or

	<video>
		<source>
	</video>

### Attributes

#### src

#### type
]]>
		</description>
		<name><![CDATA[`source`]]></name>
		<note></note>
		<resume><![CDATA[Defines a media resource for `<audio>` and `<video>`]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="span">
		<description>
<![CDATA[
### Syntax

	<span>lorem ipsum</span>
]]>
		</description>
		<name><![CDATA[`span`]]></name>
		<note></note>
		<resume><![CDATA[Defines a section in an inline element]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="sort">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = sort ( (array) $array [, (int) $sort_flags = SORT_REGULAR ] );
]]>
		</description>
		<name><![CDATA[`sort()`]]></name>
		<note></note>
		<resume><![CDATA[Sort an array but don't maintain index association]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="sqrt">
		<description>
<![CDATA[
### Syntax

	(float) $misc = sqrt ( (float) $arg );
]]>
		</description>
		<name><![CDATA[`sqrt()`]]></name>
		<note></note>
		<resume><![CDATA[Returns the square root of an element]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="str_replace str replace">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = str_replace ( (mixed) $search , (mixed) $replace , (mixed) $subject [, (int) $count ] );
]]>
		</description>
		<name><![CDATA[`str_replace()`]]></name>
		<note></note>
		<resume><![CDATA[Replace all occurrences of the search string with the replacement string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="str_shuffle str shuffle">
		<description>
<![CDATA[
### Syntax

	(string) $misc = str_shuffle ( (string) $str );
]]>
		</description>
		<name><![CDATA[`str_shuffle()`]]></name>
		<note></note>
		<resume><![CDATA[Randomly shuffles a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strip_tags strip tags">
		<description>
<![CDATA[
### Syntax

	(string) $misc = strip_tags ( (string) $str [, (string) $allowable_tags ] );
]]>
		</description>
		<name><![CDATA[`strip_tags()`]]></name>
		<note></note>
		<resume><![CDATA[Removes HTML and PHP tags from a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strlen">
		<description>
<![CDATA[
### Syntax

	(int) $misc = strlen ( (string) $string );
]]>
		</description>
		<name><![CDATA[`strlen()`]]></name>
		<note></note>
		<resume><![CDATA[Returns the string length]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strong">
		<description>
<![CDATA[
### Syntax

	<strong>lorem ipsum</strong>
]]>
		</description>
		<name>strong</name>
		<note><![CDATA[**Alias:** `<b>` (obselete)]]></note>
		<resume><![CDATA[Defines important text]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="strpos">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = strpos ( (string) $haystack , (mixed) $needle [, (int) $offset = 0 ] );
]]>
		</description>
		<name><![CDATA[`strpos()`]]></name>
		<note></note>
		<resume><![CDATA[Find the position of the first occurrence of a character in a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strrchr">
		<description>
<![CDATA[
### Syntax

	(string) $misc = strrchr ( (string) $haystack , (mixed) $needle );
]]>
		</description>
		<name><![CDATA[`strrchr()`]]></name>
		<note></note>
		<resume><![CDATA[Find the last occurrence of a character in a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strrpos">
		<description>
<![CDATA[
### Syntax

	(int) $misc = strrpos ( (string) $haystack , (mixed) $needle [, (int) $offset = 0 ] );
]]>
		</description>
		<name><![CDATA[`strrpos()`]]></name>
		<note></note>
		<resume><![CDATA[Find the position of the last occurrence of a character in a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="strstr">
		<description>
<![CDATA[
### Syntax

	(string) $misc = strstr ( (string) $haystack , (mixed) $needle [, (bool) $before_needle = false ] );
]]>
		</description>
		<name><![CDATA[`strstr()`]]></name>
		<note><![CDATA[**Alias:** `strchr`]]></note>
		<resume><![CDATA[Find the first occurrence of a character in a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="style">
		<description>
<![CDATA[
### Syntax

	<style>lorem ipsum</style>
]]>
		</description>
		<name><![CDATA[`style`]]></name>
		<note></note>
		<resume><![CDATA[Defines style information for a document]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="sub">
		<description>
<![CDATA[
### Syntax

	<sub>lorem ipsum</sub>
]]>
		</description>
		<name><![CDATA[`sub`]]></name>
		<note></note>
		<resume><![CDATA[Defines subscripted text]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="substr">
		<description>
<![CDATA[
### Syntax

	(string) $misc = substr ( (string) $string , (int) $start [, (int) $length ] );
]]>
		</description>
		<name><![CDATA[`substr()`]]></name>
		<note></note>
		<resume><![CDATA[Returns part of a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="sup">
		<description>
<![CDATA[
### Syntax

	<sup>lorem ipsum</sup>
]]>
		</description>
		<name><![CDATA[`sup`]]></name>
		<note></note>
		<resume><![CDATA[Defines supscripted text]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="table">
		<description>
<![CDATA[
### Syntax

	<table>lorem ipsum</table>

### Attributes

#### border

#### cellpadding

#### cellspacing
]]>
		</description>
		<name><![CDATA[`table`]]></name>
		<note></note>
		<resume><![CDATA[Defines a table]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="td">
		<description>
<![CDATA[
### Syntax

	<td>lorem ipsum</td>
]]>
		</description>
		<name><![CDATA[`td`]]></name>
		<note></note>
		<resume><![CDATA[Defines a cell in a `<table>`]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="text-align text align">
		<description></description>
		<name><![CDATA[`text-align`]]></name>
		<note></note>
		<resume><![CDATA[Sets the alignment of the text of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="text-decoration text decoration">
		<description></description>
		<name><![CDATA[`text-decoration`]]></name>
		<note></note>
		<resume><![CDATA[Sets the text formatting `underline`, `overline` and `line-through`]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="textarea">
		<description>
<![CDATA[
### Syntax

	<textarea>lorem ipsum</textarea>

### Attributes

#### autofocus

#### cols

#### disabled

#### maxlength

#### name

#### placeholder

#### readonly

#### required

#### rows
]]>
		</description>
		<name><![CDATA[`textarea`]]></name>
		<note></note>
		<resume><![CDATA[Defines a multiline input control]]></resume>
		<tech>HTML</tech>
		<type>Inline tag</type>
	</item>

	<item search="th">
		<description>
<![CDATA[
### Syntax

	<th>lorem ipsum</th>
]]>
		</description>
		<name><![CDATA[`th`]]></name>
		<note></note>
		<resume><![CDATA[Defines a header cell in a `<table>`]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="time">
		<description></description>
		<name><![CDATA[`time()`]]></name>
		<note></note>
		<resume><![CDATA[Return the current timestamp]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="title">
		<description>
<![CDATA[
### Syntax

	<head>
		<title>lorem ipsum</title>
	</head>
]]>
		</description>
		<name><![CDATA[`title`]]></name>
		<note></note>
		<resume><![CDATA[Defines a title for the document]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="tr">
		<description>
<![CDATA[
### Syntax

	<tr>lorem ipsum</tr>
]]>
		</description>
		<name><![CDATA[`tr`]]></name>
		<note></note>
		<resume><![CDATA[Defines a row in a `<table>`]]></resume>
		<tech>HTML</tech>
		<type>Tag</type>
	</item>

	<item search="transition">
		<description></description>
		<name><![CDATA[`transition`]]></name>
		<note><![CDATA[**Shortcut for:** `transition-property` — `transition-duration` — `transition-delay` and `transition-timing-function`]]></note>
		<resume><![CDATA[Specify a transition when an element style property changes]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="transition-delay transition delay">
		<description></description>
		<name><![CDATA[`transition-delay`]]></name>
		<note></note>
		<resume><![CDATA[Sets a delay before a transition is played]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="transition-duration transition duration">
		<description></description>
		<name><![CDATA[`transition-duration`]]></name>
		<note></note>
		<resume><![CDATA[Sets how long a transition need to be played]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="transition-property transition property">
		<description></description>
		<name><![CDATA[`transition-property`]]></name>
		<note></note>
		<resume><![CDATA[Specify what properties shall be affect by the transition]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>

	<item search="trim">
		<description>
<![CDATA[
### Syntax

	(string) $misc = trim ( (string) $str [, (string) $character_mask = " \t\n\r\0\x0B" ] );
]]>
		</description>
		<name><![CDATA[`trim()`]]></name>
		<note></note>
		<resume><![CDATA[Remove characters from both extremities of a string]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="ul">
		<description>
<![CDATA[
### Syntax

	<ul>
		<li>lorem ipsum</li>
	</ul>
]]>
		</description>
		<name><![CDATA[`ul`]]></name>
		<note></note>
		<resume><![CDATA[Defines an unordered list]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search="unlink">
		<description>
<![CDATA[
### Syntax

	(bool) $misc = unlink ( (string) $filename [, (resource) $context ] );
]]>
		</description>
		<name><![CDATA[`unlink()`]]></name>
		<note><![CDATA[**Alias:** `delete`]]></note>
		<resume><![CDATA[Deletes a file]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="unserialize">
		<description>
<![CDATA[
### Syntax

	(mixed) $misc = unserialize ( (string) $str );
]]>
		</description>
		<name><![CDATA[`unserialize()`]]></name>
		<note></note>
		<resume><![CDATA[Converts a storable representation into an PHP value]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search=":valid">
		<description></description>
		<name><![CDATA[`:valid`]]></name>
		<note></note>
		<resume><![CDATA[True if input is not empty and matches with the `type` attribute]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="var_dump var dump">
		<description>
<![CDATA[
### Syntax

	(void) var_dump ( (mixed) $expression [, (mixed) $… ] );
]]>
		</description>
		<name><![CDATA[`var_dump()`]]></name>
		<note></note>
		<resume><![CDATA[Dumps information about a variable]]></resume>
		<tech>PHP</tech>
		<type>Function</type>
	</item>

	<item search="video">
		<description>
<![CDATA[
### Syntax

	<video>
		<source>
	</video>

### Attributes

#### autoplay

#### controls

#### loop

#### muted

#### preload

#### src

#### volume
]]>
		</description>
		<name><![CDATA[`video`]]></name>
		<note></note>
		<resume><![CDATA[Defines a video or a movie]]></resume>
		<tech>HTML</tech>
		<type>Block tag</type>
	</item>

	<item search=":visited">
		<description></description>
		<name><![CDATA[`:visited`]]></name>
		<note></note>
		<resume><![CDATA[Select `:visited` links]]></resume>
		<tech>CSS</tech>
		<type>Pseudo-class</type>
	</item>

	<item search="width">
		<description></description>
		<name><![CDATA[`width`]]></name>
		<note></note>
		<resume><![CDATA[Sets the width of an element]]></resume>
		<tech>CSS</tech>
		<type>Property</type>
	</item>


	<!--
	<item search="listen">
		<description></description>
		<name>listen()</name>
		<note></note>
		<resume>Server listen on given port attribute</resume>
		<tech>NodeJS</tech>
		<type>Function</type>
	</item>
	-->
</items>